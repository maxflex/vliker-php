<?php	// Контроллер	class TaskController extends Controller	{		public $defaultAction = "";				// Папка вьюх		protected $_viewsFolder	= "task";										##################################################		###################### AJAX ######################		##################################################						/**		 * Получаем 6 блоков, начало вилайкера.		 * 		 */		public function actionAjaxBlocks()		{			extract($_POST);						// Проверяем валидность ссылки			$url_valid = Task::checkUrl($url);						// Если невалидный url			if ($url_valid !== true) {				jsonResponse(["error" => $url_valid]);			}						// Пытаемся найти задачу			$Task = Task::findByUrl($url);						// Если задачи с таким URL не существует			if (!$Task) {				// Добавляем новую задачу (без добавления сразу в БД)				// в БД задача добавляется только после накрутки туда лайков в функции Task->addLikes()				$Task = new Task([					"url"		=> $url,					"id_user"	=> User::fromSession()->id				]);			}						// Доавить текущую задачу в сессию			User::fromSession()->setTask($Task);						// Получаем начальные задачи пользователя			$Tasks = User::fromSession()->getNewTasks(6);						// Рендерим в JSON			$this->renderClean("blocks", [				"Task"	=> $Task,	// задача, которую только что добавил пользователь				"Tasks"	=> $Tasks,	// другие задачи. которЫМ пользователь будет накручивать			]);					}						/**		 * Получить новую задачу.		 * 		 */		public function actionAjaxGetNew()		{			echo User::fromSession()->getNewTask()->display();		}						/**		 * Засчитать лайки.		 * 		 */		public function actionAjaxStop()		{			extract($_POST); // получить переменные						// Если поставлено хотя бы 3 лайка			if (count($task_ids) >= 3) {				// Ставим лайки задачам				Task::like($task_ids);								// Начисляем лайки себе				User::fromSession()->Task->addLikes(count($task_ids));			}		}	}